'''
 Велосипедисты, участвующие в шоссейной гонке, в некоторый момент времени, который называется начальным, оказались в точках,
 удалённых от места старта на  x1, x2 .... xn метров (n - общее количество велосипедитстов, не превосходит 100000). 
 Каждый велосипедист двигается со своей постоянной скоростью v1, v2, ... vn метров в секунду. 
 Все велосипедисты двигаются в одну и ту же сторону.
 Репортёр, освещеющий ход соревнований, хочут определить момент времени, в который расстояние между лидирующим в гонке 
 велосипедистом и замыкающим гонку велосипедистом станет минимальным, чтобы с вертолёта сфотографировать сразу всех участников велогонки. 
 
 Необходимо найти момент времени, когда расстояние станет минимальным

 Решение:
 Определим функцию dist(t), которая будет за O(N) определять расстояние между лидером и замыкающим в момент времени t. 
 Если dist(t + eps) > dist(t), то функция растёт и надо сдвинут левую границу поиска, иначе правую.
'''


def dist(t, params):
    x, v = params
    minpos = maxpos = x[0] + v[0] * t
    for i in range(1, len(x)):
        nowpos = x[i] + v[i] * t
        minpos = min(minpos, nowpos)
        maxpos = max(maxpos, nowpos)

    return maxpos - minpos


def checkasc(t, eps, params):
    return dist(t + eps, params) >= dist(t, params)


def fbinsearch(l, r, eps, check, params):
    while l + eps < r:
        m = (l + r) / 2
        if check(m, eps, params):
            r = m
        else:
            l = m

    return l